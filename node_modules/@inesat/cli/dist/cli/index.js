"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const store_1 = __importDefault(require("../helper/store"));
const webpack_1 = __importDefault(require("../webpack"));
const plugins_1 = __importDefault(require("../config/plugins"));
const chain_1 = __importDefault(require("../config/chain"));
class InesatCliScript {
    // 执行文件名称
    // name: any = ''
    constructor() { }
    /**
     * 执行命令相关脚本
     * @param name
     */
    async exec(name, mode, cliOptions, pkg) {
        if (name === 'init') {
            const cilScript = await Promise.resolve().then(() => __importStar(require(`./${name}`)));
            await cilScript.default.setup(cliOptions);
            return;
        }
        // 全局变量实例化 store & config
        await store_1.default.setup(mode, cliOptions, pkg);
        // webpack 实例化
        await webpack_1.default.setup();
        // 初始化所有 inesatCli Plugins
        await plugins_1.default.setup();
        // webpack Chain
        await chain_1.default.setup();
        // 执行 cli 脚本
        name = !!store_1.default.config.build.lib ? 'build' : name;
        const cilScript = await Promise.resolve().then(() => __importStar(require(`./${name}`)));
        await cilScript.default.setup(cliOptions);
    }
}
exports.default = new InesatCliScript();
//# sourceMappingURL=index.js.map