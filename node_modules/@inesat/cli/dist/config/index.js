"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initConfig = exports.defineConfig = void 0;
// import store from 'src/helper/store'
const build_1 = require("./build");
const server_1 = require("./server");
const html_1 = require("./html");
// import {LoggerType} from 'src/helper/logger'
const path_1 = __importDefault(require("path"));
// import {Configuration as WebpackDevServerConfiguration} from 'webpack-dev-server'
const css_1 = require("./css");
function defineConfig(config) {
    return config;
}
exports.defineConfig = defineConfig;
const initConfig = async (op = {}) => {
    var _a;
    // 解决深度拷贝被替代问题
    const build = (0, build_1.initBuild)(op.build);
    delete op.build;
    //
    const server = (0, server_1.initServer)(op.server);
    delete op.server;
    //
    const html = (0, html_1.initHtml)(op.html);
    delete op.html;
    //
    const dtsPath = (_a = op.dtsPath) !== null && _a !== void 0 ? _a : {};
    delete op.dtsPath;
    //
    const css = (0, css_1.initCSS)(op.css);
    delete op.css;
    //
    const debug = {
        clearLog: true,
        profile: false,
        wplogger: false,
        progress: true,
        webpackCache: true,
        babelDebug: false,
        level: 'info',
        ...(op.debug || {}),
    };
    delete op.debug;
    //
    // const initTemplates = op.initTemplates ? op.initTemplates : templates
    // if (op.initTemplates) delete op.initTemplates
    //
    const moduleTransformExclude = { and: [/(node_modules|bower_components)/] };
    op.moduleTransform = op.moduleTransform || {};
    // op.moduleTransform.parser = op.moduleTransform.parser || 'babel'
    op.moduleTransform.antdTransformImport = op.moduleTransform.antdTransformImport === false ? false : true;
    op.moduleTransform.useBuiltIns =
        typeof op.moduleTransform.useBuiltIns !== 'undefined' ? op.moduleTransform.useBuiltIns : 'entry';
    if (op.moduleTransform.exclude) {
        moduleTransformExclude.and = op.moduleTransform.exclude;
    }
    if (op.moduleTransform.include) {
        moduleTransformExclude.not = op.moduleTransform.include;
    }
    //
    let compile;
    if (op.compile) {
        compile = {
            minify: false,
            cssminify: false,
            ...op.compile,
        };
    }
    else {
        const { compileType, loader } = await Promise.resolve().then(() => __importStar(require("../webpack/loader/babel-loader")));
        compile = {
            minify: false,
            cssminify: false,
            compileType: compileType,
            loader,
        };
    }
    // delete op.moduleTransform
    //
    return {
        ...{
            root: process.cwd(),
            env: undefined,
            appSrc: 'src',
            publicDir: 'public',
            cacheDir: 'node_modules/.InesatCli-cache',
            build,
            define: [],
            plugins: [],
            server,
            html,
            debug,
            useImportMeta: false,
            splitCss: true,
            appEntry: '',
            jsCheck: false,
            typingsPath: path_1.default.resolve('src', 'inesatCliShareTypes'),
            dtsPath,
            moduleTransformExclude,
            // initTemplates,
            useExternalsReplaceScript: false,
            compile,
            css,
        },
        ...op
    };
};
exports.initConfig = initConfig;
//# sourceMappingURL=index.js.map